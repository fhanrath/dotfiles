# Conduit - Behind Traefik Reverse Proxy
version: '3'

services:
    homeserver:
        ### If you already built the Conduit image with 'docker build' or want to use the Docker Hub image,
        ### then you are ready to go.
        image: matrixconduit/matrix-conduit:latest
        ### If you want to build a fresh image from the sources, then comment the image line and uncomment the
        ### build lines. If you want meaningful labels in your built Conduit image, you should run docker-compose like this:
        ### CREATED=$(date -u +'%Y-%m-%dT%H:%M:%SZ') VERSION=$(grep -m1 -o '[0-9].[0-9].[0-9]' Cargo.toml) docker-compose up -d
        # build:
        #     context: .
        #     args:
        #         CREATED: '2021-03-16T08:18:27Z'
        #         VERSION: '0.1.0'
        #         LOCAL: 'false'
        #         GIT_REF: origin/master
        restart: unless-stopped
        volumes:
            - /matrix/db:/var/lib/matrix-conduit/
        networks:
            - proxy
        environment:
            CONDUIT_SERVER_NAME: matrix.fenris.xyz # EDIT THIS
            CONDUIT_DATABASE_PATH: /var/lib/matrix-conduit/
            CONDUIT_DATABASE_BACKEND: rocksdb
            CONDUIT_PORT: 6167
            CONDUIT_MAX_REQUEST_SIZE: 20_000_000 # in bytes, ~20 MB
            CONDUIT_ALLOW_REGISTRATION: 'false'
            CONDUIT_ALLOW_FEDERATION: 'true'
            CONDUIT_ALLOW_CHECK_FOR_UPDATES: 'true'
            CONDUIT_TRUSTED_SERVERS: '["matrix.org","chaospott.de"]'
            #CONDUIT_MAX_CONCURRENT_REQUESTS: 100
            #CONDUIT_LOG: warn,rocket=off,_=off,sled=off
            CONDUIT_ADDRESS: 0.0.0.0
            CONDUIT_CONFIG: '' # Ignore this
        labels:
            - traefik.enable=true
            - traefik.http.routers.matrix.rule=Host(`matrix.fenris.xyz`)
            - traefik.http.routers.mydashboard.tls=true
            - traefik.http.routers.mydashboard.tls.certresolver=myresolver
            - traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginList=*
            - traefik.http.middlewares.cors-headers.headers.accessControlAllowHeaders=Origin, X-Requested-With, Content-Type, Accept, Authorization
            - traefik.http.middlewares.cors-headers.headers.accessControlAllowMethods=GET, POST, PUT, DELETE, OPTIONS

    # We need some way to server the client and server .well-known json. The simplest way is to use a nginx container
    # to serve those two as static files. If you want to use a different way, delete or comment the below service, here
    # and in the docker-compose override file.
    well-known:
        image: nginx:latest
        restart: unless-stopped
        networks:
            - proxy
        volumes:
            - ./nginx/matrix.conf:/etc/nginx/conf.d/matrix.conf # the config to serve the .well-known/matrix files
            - ./nginx/www:/var/www/ # location of the client and server .well-known-files
        labels:
            - traefik.enable=true
            - traefik.http.routers.to-matrix-wellknown.rule=Host(`matrix.fenris.xyz`) && PathPrefix(`/.well-known/matrix`)
            - traefik.http.routers.mydashboard.tls=true
            - traefik.http.routers.mydashboard.tls.certresolver=myresolver
            - traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginList=*
            - traefik.http.middlewares.cors-headers.headers.accessControlAllowHeaders=Origin, X-Requested-With, Content-Type, Accept, Authorization
            - traefik.http.middlewares.cors-headers.headers.accessControlAllowMethods=GET, POST, PUT, DELETE, OPTIONS

networks:
    proxy:
        external: true
